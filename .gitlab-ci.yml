include:
  - remote: 'https://gitlab.gnome.org/Infrastructure/freedesktop-ci-templates/-/raw/145b1bc7ef1702d2bd71584010d7113c6786a506/templates/fedora.yml'
  - component: gitlab.gnome.org/GNOME/citemplates/release-service@master
    inputs:
      dist-job-name: "build-release-tarball"
      tarball-artifact-path: "${TARBALL_ARTIFACT_PATH}"

stages:
  - prepare
  - build
  - deploy

variables:
  FDO_UPSTREAM_REPO: gnome/gcr
  TARBALL_ARTIFACT_PATH: "_build/meson-dist/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}.tar.xz"

.fedora.container.common:
  variables:
    # When branching a stable release, change 'main' to the
    # release branch name to ensure that a new image will
    # be created, tailored for the stable branch.
    BRANCH_NAME: 'gcr-4-3'
    CONTAINER_TAG: '2024-10-15.0'
    FEDORA_VERSION: latest
    # Derive FDO variables from this automatically.
    # DO NOT edit, instead change the variables above
    FDO_REPO_SUFFIX: '${BRANCH_NAME}'
    FDO_DISTRIBUTION_TAG: '${CONTAINER_TAG}-fedora-${FEDORA_VERSION}'
    FDO_DISTRIBUTION_VERSION: '${FEDORA_VERSION}'

#############################################
#          Create CI Docker Images          #
#############################################

# See also https://gitlab.gnome.org/Infrastructure/freedesktop-ci-templates
build.container.fedora@x86_64:
  extends:
  - '.fdo.container-build@fedora'
  - '.fedora.container.common'
  stage: prepare
  variables:
    # no need to pull the whole tree for rebuilding the image
    GIT_STRATEGY: none
    # Expiry sets fdo.expires on the image
    FDO_EXPIRES_AFTER: 8w
    FDO_DISTRIBUTION_PACKAGES: >-
      curl
      dbus-daemon
      diffutils
      gcc
      gcovr
      gi-docgen
      git
      gnupg2
      gnutls-devel
      gobject-introspection-devel
      gpgme-devel
      gtk4-devel
      lcov
      libasan
      libgcrypt-devel
      libsecret-devel
      libubsan
      meson
      ninja-build
      openssh
      openssh-clients
      python
      systemd-devel
      unzip
      vala
      valgrind-devel


#############################################
#               STAGE: BUILD                #
#############################################

.build:
  extends:
    - '.fdo.suffixed-image@fedora'
    - '.fedora.container.common'
  parallel:
    matrix:
      - CRYPTO: libgcrypt
      - CRYPTO: gnutls
        GNUTLS_FORCE_FIPS_MODE: [0, 1]

fedora:Werror:
  stage: build
  extends:
    - .build
  script:
    - meson setup _build -Dwerror=true -Dc_args=-Wno-error=deprecated-declarations -Dcrypto=$CRYPTO
    - meson compile -C _build
    - dbus-run-session -- meson test -C _build
  artifacts:
    reports:
      junit: "_build/meson-logs/testlog.junit.xml"
    name: "gcr-werror-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    when: always
    paths:
      - "_build/config.h"
      - "_build/meson-logs"

fedora:asan:
  stage: build
  extends:
    - .build
  tags:
    - asan # LSAN needs CAP_SYS_PTRACE
  script:
    - meson setup _build -Db_sanitize=address -Dgtk_doc=false -Dcrypto=$CRYPTO
    - export G_SLICE=always-malloc G_DEBUG=gc-friendly ASAN_OPTIONS=abort_on_error=1:fast_unwind_on_malloc=0
    - dbus-run-session -- meson test -C _build
  allow_failure: true
  artifacts:
    name: "gcr-asan-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    when: always
    reports:
      junit: "_build/meson-logs/testlog.junit.xml"
    paths:
      - "_build/config.h"
      - "_build/meson-logs"

fedora:ubsan:
  stage: build
  extends:
    - .build
  script:
    - meson setup _build -Db_sanitize=undefined -Dgtk_doc=false -Dcrypto=$CRYPTO
    - dbus-run-session -- meson test -C _build
  artifacts:
    name: "gcr-ubsan-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    when: always
    reports:
      junit: "_build/meson-logs/testlog.junit.xml"
    paths:
      - "_build/config.h"
      - "_build/meson-logs"

fedora:coverage:
  stage: build
  extends:
    - .build
  script:
    - meson setup _build -Db_coverage=true
    - dbus-run-session -- meson test -C _build
    - ninja coverage-xml -C _build
    - ninja docs -C _build
  coverage: '/^\s+lines.+:\s+([\d.]+\%)\s+/'
  artifacts:
    name: "gcr-coverage-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    when: always
    reports:
      junit: "_build/meson-logs/testlog.junit.xml"
      coverage_report:
        coverage_format: cobertura
        path: "_build/meson-logs/coverage.xml"
    paths:
      - "_build/config.h"
      - "_build/meson-logs"
      - "_build/docs"


#############################################
#              STAGE: DEPLOY                #
#############################################

build-release-tarball:
  extends:
    - '.fdo.suffixed-image@fedora'
    - '.fedora.container.common'
  stage: deploy
  script:
    - meson setup _build
    - dbus-run-session -- meson dist -C _build
  artifacts:
    paths:
      - $TARBALL_ARTIFACT_PATH

pages:
  extends:
    - '.fdo.suffixed-image@fedora'
    - '.fedora.container.common'
  stage: deploy
  only:
    - main
  needs: ['fedora:coverage']
  script:
    - mkdir public
    - 'curl --location --output gcr-3.zip "https://gitlab.gnome.org/api/v4/projects/${CI_PROJECT_ID}/jobs/artifacts/gnome-41/download?job=fedora:Werror&job_token=${CI_JOB_TOKEN}"'
    - unzip -q gcr-3.zip -d gcr-3
    - mv gcr-3/_build/docs/gck/gck-1 public/gck-1
    - mv gcr-3/_build/docs/gcr/gcr-3 public/gcr-3
    - mv gcr-3/_build/docs/ui/gcr-ui-3 public/gcr-ui-3
    - mv _build/docs/gck/gck-2 public/gck-2
    - mv _build/docs/gcr/gcr-4 public/gcr-4
  artifacts:
    when: on_success
    paths:
      - public
